"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestModelBase = void 0;
var ConstValue_1 = require("../../Utils/ConstValue");
var Cst = require("../../Utils/ConstValue");
var RequestModelBase = (function () {
    function RequestModelBase() {
    }
    RequestModelBase.prototype.GetHeader = function () {
        var Header = {};
        var cookies = this.GetCookies();
        if (cookies != "") {
            Header["cookie"] = cookies;
        }
        var Token = this.GetToken();
        if (Token) {
            Header["Authorization"] = "Bearer " + Token;
        }
        Header["Content-Type"] = "application/json";
        return Header;
    };
    RequestModelBase.prototype.GetToken = function () {
        return wx.getStorageSync(ConstValue_1.StorageKey.Authorization);
    };
    RequestModelBase.prototype.GetCookies = function () {
        var cookies = "";
        if (wx.getStorageSync(Cst.StorageKey.Cookies)) {
            var cookiesMap = JSON.parse(wx.getStorageSync(Cst.StorageKey.Cookies));
            var keys = Object.keys(cookiesMap);
            for (var i = 0; i < keys.length; i++) {
                cookies += keys[i] + "=" + cookiesMap[keys[i]] + ";";
            }
        }
        return cookies;
    };
    return RequestModelBase;
}());
exports.RequestModelBase = RequestModelBase;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVxdWVzdE1vZGVsQmFzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlJlcXVlc3RNb2RlbEJhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEscURBQW9EO0FBQ3BELDRDQUErQztBQU0vQztJQUFBO0lBd0NBLENBQUM7SUEvQlUsb0NBQVMsR0FBaEI7UUFDSSxJQUFJLE1BQU0sR0FBd0IsRUFBRSxDQUFDO1FBQ3JDLElBQUksT0FBTyxHQUFXLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUN4QyxJQUFJLE9BQU8sSUFBSSxFQUFFLEVBQUU7WUFDZixNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsT0FBTyxDQUFDO1NBQzlCO1FBRUQsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzVCLElBQUcsS0FBSyxFQUFDO1lBQ0wsTUFBTSxDQUFDLGVBQWUsQ0FBQyxHQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7U0FDN0M7UUFDRCxNQUFNLENBQUMsY0FBYyxDQUFDLEdBQUMsa0JBQWtCLENBQUM7UUFFMUMsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUVPLG1DQUFRLEdBQWhCO1FBQ0ksT0FBTyxFQUFFLENBQUMsY0FBYyxDQUFDLHVCQUFVLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVPLHFDQUFVLEdBQWxCO1FBQ0ksSUFBSSxPQUFPLEdBQVcsRUFBRSxDQUFDO1FBQ3pCLElBQUksRUFBRSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQzNDLElBQUksVUFBVSxHQUEyQixJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQy9GLElBQUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFrQixDQUFDO1lBQ3BELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUNsQyxPQUFPLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO2FBQ3hEO1NBQ0o7UUFDRCxPQUFPLE9BQU8sQ0FBQztJQUNuQixDQUFDO0lBQ0wsdUJBQUM7QUFBRCxDQUFDLEFBeENELElBd0NDO0FBeENxQiw0Q0FBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdG9yYWdlS2V5IH0gZnJvbSBcIi4uLy4uL1V0aWxzL0NvbnN0VmFsdWVcIjtcclxuaW1wb3J0IENzdCA9IHJlcXVpcmUoXCIuLi8uLi9VdGlscy9Db25zdFZhbHVlXCIpO1xyXG4vKipcclxuICogU2hpeWlBcGnnmoRSZXF1ZXN0TW9kZWzpnIDnu6fmib/oh6rmraTnsbtcclxuICog57un5om/6Ieq5q2k57G76ZyA5a2Q57G76YeN5YaZ5p6E6YCg5Ye95pWw55So5LqO5Lyg5YWl5Y+C5pWwXHJcbiAqIOW5tuWunueOsEdldEJvZHnmlrnms5XnlKjkuo7lsIbmlbDmja7ovazmjaLkuLpSZWNvcmQ8c3RyaW5nLGFueT5cclxuICog5Lul5Y+KR2V0TWV0aG9k5pa55rOV55So5LqO5a6a5LmJUmVxdWVzdOeahOaWueazlSovXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBSZXF1ZXN0TW9kZWxCYXNlIHtcclxuICAgIC8qKlxyXG4gICAgICog5a6a5LmJUmVxdWVzdOaWueazle+8jOS7hemcgHJldHVybuS4gOenjeaWueazleWNs+WPryovXHJcbiAgICBwdWJsaWMgYWJzdHJhY3QgR2V0TWV0aG9kKCk6IFwiT1BUSU9OU1wiIHwgXCJHRVRcIiB8IFwiSEVBRFwiIHwgXCJQT1NUXCIgfCBcIlBVVFwiIHwgXCJERUxFVEVcIiB8IFwiVFJBQ0VcIiB8IFwiQ09OTkVDVFwiIHwgdW5kZWZpbmVkO1xyXG4gICAgLyoqXHJcbiAgICAgKiDlsIZSZXF1ZXN055qE5pWw5o2u5ou85o6l5Li6UmVjb3JkPHN0cmluZyxhbnk+Ki9cclxuICAgIHB1YmxpYyBhYnN0cmFjdCBHZXRCb2R5KCk6IFJlY29yZDxzdHJpbmcsIGFueT47XHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPlkhlYWRlcu+8jOWunueOsOS6huW+ruS/oeWwj+eoi+W6j+eahENvb2tpZeezu+e7nyovXHJcbiAgICBwdWJsaWMgR2V0SGVhZGVyKCk6IFJlY29yZDxzdHJpbmcsIGFueT4ge1xyXG4gICAgICAgIGxldCBIZWFkZXI6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7fTtcclxuICAgICAgICBsZXQgY29va2llczogc3RyaW5nID0gdGhpcy5HZXRDb29raWVzKCk7XHJcbiAgICAgICAgaWYgKGNvb2tpZXMgIT0gXCJcIikge1xyXG4gICAgICAgICAgICBIZWFkZXJbXCJjb29raWVcIl0gPSBjb29raWVzO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IFRva2VuID0gdGhpcy5HZXRUb2tlbigpO1xyXG4gICAgICAgIGlmKFRva2VuKXtcclxuICAgICAgICAgICAgSGVhZGVyW1wiQXV0aG9yaXphdGlvblwiXT1cIkJlYXJlciBcIiArIFRva2VuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBIZWFkZXJbXCJDb250ZW50LVR5cGVcIl09XCJhcHBsaWNhdGlvbi9qc29uXCI7XHJcbiAgICAgIFxyXG4gICAgICAgIHJldHVybiBIZWFkZXI7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBHZXRUb2tlbigpOnN0cmluZ3x1bmRlZmluZWR7XHJcbiAgICAgICAgcmV0dXJuIHd4LmdldFN0b3JhZ2VTeW5jKFN0b3JhZ2VLZXkuQXV0aG9yaXphdGlvbik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBHZXRDb29raWVzKCkge1xyXG4gICAgICAgIGxldCBjb29raWVzOiBzdHJpbmcgPSBcIlwiO1xyXG4gICAgICAgIGlmICh3eC5nZXRTdG9yYWdlU3luYyhDc3QuU3RvcmFnZUtleS5Db29raWVzKSkge1xyXG4gICAgICAgICAgICBsZXQgY29va2llc01hcDogUmVjb3JkPHN0cmluZywgc3RyaW5nPiA9IEpTT04ucGFyc2Uod3guZ2V0U3RvcmFnZVN5bmMoQ3N0LlN0b3JhZ2VLZXkuQ29va2llcykpO1xyXG4gICAgICAgICAgICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKGNvb2tpZXNNYXApIGFzIEFycmF5PHN0cmluZz47XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgY29va2llcyArPSBrZXlzW2ldICsgXCI9XCIgKyBjb29raWVzTWFwW2tleXNbaV1dICsgXCI7XCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGNvb2tpZXM7XHJcbiAgICB9XHJcbn0iXX0=