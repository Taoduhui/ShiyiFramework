"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Router = exports.PageName = void 0;
var PageName;
(function (PageName) {
    PageName[PageName["DbDetail"] = 0] = "DbDetail";
    PageName[PageName["DbSelector"] = 1] = "DbSelector";
    PageName[PageName["Dictionary"] = 2] = "Dictionary";
    PageName[PageName["index"] = 3] = "index";
    PageName[PageName["MyFavorDb"] = 4] = "MyFavorDb";
    PageName[PageName["recite"] = 5] = "recite";
    PageName[PageName["RichText"] = 6] = "RichText";
    PageName[PageName["SearchWord"] = 7] = "SearchWord";
    PageName[PageName["CreateDb"] = 8] = "CreateDb";
    PageName[PageName["SearchDb"] = 9] = "SearchDb";
})(PageName = exports.PageName || (exports.PageName = {}));
var Router = (function () {
    function Router() {
    }
    Router.TryGetMapPath = function (name, CurrentPath, map) {
        for (var i = 0; i < map.length; i++) {
            var Res = Router.TryGetMapPath(name, CurrentPath + "/" + PageName[map[i].name], map[i].children);
            if (Res) {
                return Res;
            }
            if (map[i].name == name) {
                return CurrentPath + "/" + PageName[map[i].name] + "/" + PageName[map[i].name];
            }
        }
        return "";
    };
    Router.GetPagePath = function (name) {
        var Path = Router.TryGetMapPath(name, "/pages", Router.PageMap);
        if (Path) {
            return Path;
        }
        else {
            return "/pages/" + PageName[name] + "/" + PageName[name];
        }
    };
    Router.PageLoad = function (page) {
        Router.PageStacks.push(page);
    };
    Router.PageUnload = function () {
        var Observers = Router.RegisteredDataObservers.get(Router.CurrentPage);
        if (Observers) {
            for (var _i = 0, Observers_1 = Observers; _i < Observers_1.length; _i++) {
                var Notification = Observers_1[_i];
                Notification(Router.CurrentPage);
            }
        }
        Router.PageStacks.pop();
    };
    Router.RegisterPageUnLoaded = function (page, notification) {
        var Observers = Router.RegisteredDataObservers.get(page);
        if (!Observers) {
            Observers = new Array();
        }
        Observers.push(notification);
        Router.RegisteredDataObservers.set(page, Observers);
    };
    Router.NavigateTo = function (name, param) {
        Router.NavigateParam = param ? param : undefined;
        wx.navigateTo({
            url: Router.GetPagePath(name)
        });
    };
    Router.NavigateBack = function () {
        wx.navigateBack();
    };
    Object.defineProperty(Router.prototype, "CurrentPage", {
        get: function () {
            return Router.PageStacks[Router.PageStacks.length - 1];
        },
        enumerable: false,
        configurable: true
    });
    Router.PageMap = [];
    Router.PageStacks = new Array();
    Router.RegisteredDataObservers = new Map();
    return Router;
}());
exports.Router = Router;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUm91dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiUm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLElBQVksUUFFWDtBQUZELFdBQVksUUFBUTtJQUNoQiwrQ0FBUSxDQUFBO0lBQUUsbURBQVUsQ0FBQTtJQUFFLG1EQUFVLENBQUE7SUFBRSx5Q0FBSyxDQUFBO0lBQUUsaURBQVMsQ0FBQTtJQUFFLDJDQUFNLENBQUE7SUFBRSwrQ0FBUSxDQUFBO0lBQUUsbURBQVUsQ0FBQTtJQUFFLCtDQUFRLENBQUE7SUFBRSwrQ0FBUSxDQUFBO0FBQ3hHLENBQUMsRUFGVyxRQUFRLEdBQVIsZ0JBQVEsS0FBUixnQkFBUSxRQUVuQjtBQU9EO0lBQUE7SUFzRUEsQ0FBQztJQWhFaUIsb0JBQWEsR0FBM0IsVUFBNEIsSUFBYyxFQUFFLFdBQW1CLEVBQUUsR0FBdUI7UUFDcEYsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDakMsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsV0FBVyxHQUFHLEdBQUcsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNqRyxJQUFJLEdBQUcsRUFBRTtnQkFDTCxPQUFPLEdBQUcsQ0FBQzthQUNkO1lBQ0QsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksRUFBRTtnQkFDckIsT0FBTyxXQUFXLEdBQUcsR0FBRyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDbEY7U0FDSjtRQUNELE9BQU8sRUFBRSxDQUFDO0lBQ2QsQ0FBQztJQUVjLGtCQUFXLEdBQTFCLFVBQTJCLElBQWM7UUFDckMsSUFBSSxJQUFJLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNoRSxJQUFJLElBQUksRUFBRTtZQUNOLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7YUFBTTtZQUNILE9BQU8sU0FBUyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzVEO0lBQ0wsQ0FBQztJQU9hLGVBQVEsR0FBdEIsVUFBdUIsSUFBbUI7UUFDdEMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUNhLGlCQUFVLEdBQXhCO1FBQ0ksSUFBSSxTQUFTLEdBQUcsTUFBTSxDQUFDLHVCQUF1QixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDdkUsSUFBSSxTQUFTLEVBQUU7WUFDWCxLQUF5QixVQUFTLEVBQVQsdUJBQVMsRUFBVCx1QkFBUyxFQUFULElBQVMsRUFBRTtnQkFBL0IsSUFBSSxZQUFZLGtCQUFBO2dCQUNqQixZQUFZLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFBO2FBQ25DO1NBQ0o7UUFDRCxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFDYSwyQkFBb0IsR0FBbEMsVUFBbUMsSUFBbUIsRUFBQyxZQUEwQztRQUM3RixJQUFJLFNBQVMsR0FBRyxNQUFNLENBQUMsdUJBQXVCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pELElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDWixTQUFTLEdBQUcsSUFBSSxLQUFLLEVBQWlDLENBQUM7U0FDMUQ7UUFDRCxTQUFTLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzdCLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFHYSxpQkFBVSxHQUF4QixVQUF5QixJQUFjLEVBQUUsS0FBVztRQUNoRCxNQUFNLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFDakQsRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUNWLEdBQUcsRUFBRSxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQztTQUNoQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRWEsbUJBQVksR0FBMUI7UUFDSSxFQUFFLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUdELHNCQUFXLCtCQUFXO2FBQXRCO1lBQ0ksT0FBTyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzNELENBQUM7OztPQUFBO0lBakVhLGNBQU8sR0FBdUIsRUFBRSxDQUFBO0lBd0JoQyxpQkFBVSxHQUF5QixJQUFJLEtBQUssRUFBaUIsQ0FBQztJQUU3RCw4QkFBdUIsR0FDaEMsSUFBSSxHQUFHLEVBQXVELENBQUM7SUF1Q3pFLGFBQUM7Q0FBQSxBQXRFRCxJQXNFQztBQXRFWSx3QkFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNoaXlpUGFnZUJhc2UgfSBmcm9tIFwiLi4vU2hpeWlQYWdlL0Jhc2UvU2hpeWlQYWdlQmFzZVwiO1xyXG5cclxuZXhwb3J0IGVudW0gUGFnZU5hbWUge1xyXG4gICAgRGJEZXRhaWwsIERiU2VsZWN0b3IsIERpY3Rpb25hcnksIGluZGV4LCBNeUZhdm9yRGIsIHJlY2l0ZSwgUmljaFRleHQsIFNlYXJjaFdvcmQsIENyZWF0ZURiLCBTZWFyY2hEYlxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFBhZ2VNYXBJdGVtIHtcclxuICAgIG5hbWU6IFBhZ2VOYW1lLFxyXG4gICAgY2hpbGRyZW46IEFycmF5PFBhZ2VNYXBJdGVtPixcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFJvdXRlciB7XHJcbiAgICAvKipcclxuICAgICAqIOS7heW1jOWll+ebruW9lemcgOimgeWcqOatpOWumuS5iVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIFBhZ2VNYXA6IEFycmF5PFBhZ2VNYXBJdGVtPiA9IFtdXHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBUcnlHZXRNYXBQYXRoKG5hbWU6IFBhZ2VOYW1lLCBDdXJyZW50UGF0aDogc3RyaW5nLCBtYXA6IEFycmF5PFBhZ2VNYXBJdGVtPik6IHN0cmluZyB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtYXAubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgbGV0IFJlcyA9IFJvdXRlci5UcnlHZXRNYXBQYXRoKG5hbWUsIEN1cnJlbnRQYXRoICsgXCIvXCIgKyBQYWdlTmFtZVttYXBbaV0ubmFtZV0sIG1hcFtpXS5jaGlsZHJlbik7XHJcbiAgICAgICAgICAgIGlmIChSZXMpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBSZXM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKG1hcFtpXS5uYW1lID09IG5hbWUpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBDdXJyZW50UGF0aCArIFwiL1wiICsgUGFnZU5hbWVbbWFwW2ldLm5hbWVdICsgXCIvXCIgKyBQYWdlTmFtZVttYXBbaV0ubmFtZV07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFwiXCI7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgR2V0UGFnZVBhdGgobmFtZTogUGFnZU5hbWUpOiBzdHJpbmcge1xyXG4gICAgICAgIGxldCBQYXRoID0gUm91dGVyLlRyeUdldE1hcFBhdGgobmFtZSwgXCIvcGFnZXNcIiwgUm91dGVyLlBhZ2VNYXApO1xyXG4gICAgICAgIGlmIChQYXRoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBQYXRoO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBcIi9wYWdlcy9cIiArIFBhZ2VOYW1lW25hbWVdICsgXCIvXCIgKyBQYWdlTmFtZVtuYW1lXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBQYWdlU3RhY2tzOiBBcnJheTxTaGl5aVBhZ2VCYXNlPiA9IG5ldyBBcnJheTxTaGl5aVBhZ2VCYXNlPigpO1xyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIFJlZ2lzdGVyZWREYXRhT2JzZXJ2ZXJzOiBNYXA8U2hpeWlQYWdlQmFzZSwgQXJyYXk8KHBhZ2U6IFNoaXlpUGFnZUJhc2UpID0+IHZvaWQ+PlxyXG4gICAgICAgID0gbmV3IE1hcDxTaGl5aVBhZ2VCYXNlLCBBcnJheTwocGFnZTogU2hpeWlQYWdlQmFzZSkgPT4gdm9pZD4+KCk7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBQYWdlTG9hZChwYWdlOiBTaGl5aVBhZ2VCYXNlKTogdm9pZCB7XHJcbiAgICAgICAgUm91dGVyLlBhZ2VTdGFja3MucHVzaChwYWdlKTtcclxuICAgIH1cclxuICAgIHB1YmxpYyBzdGF0aWMgUGFnZVVubG9hZCgpOiB2b2lkIHtcclxuICAgICAgICBsZXQgT2JzZXJ2ZXJzID0gUm91dGVyLlJlZ2lzdGVyZWREYXRhT2JzZXJ2ZXJzLmdldChSb3V0ZXIuQ3VycmVudFBhZ2UpO1xyXG4gICAgICAgIGlmIChPYnNlcnZlcnMpIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgTm90aWZpY2F0aW9uIG9mIE9ic2VydmVycykge1xyXG4gICAgICAgICAgICAgICAgTm90aWZpY2F0aW9uKFJvdXRlci5DdXJyZW50UGFnZSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBSb3V0ZXIuUGFnZVN0YWNrcy5wb3AoKTtcclxuICAgIH1cclxuICAgIHB1YmxpYyBzdGF0aWMgUmVnaXN0ZXJQYWdlVW5Mb2FkZWQocGFnZTogU2hpeWlQYWdlQmFzZSxub3RpZmljYXRpb246KHBhZ2U6IFNoaXlpUGFnZUJhc2UpID0+IHZvaWQpOiB2b2lkIHtcclxuICAgICAgICBsZXQgT2JzZXJ2ZXJzID0gUm91dGVyLlJlZ2lzdGVyZWREYXRhT2JzZXJ2ZXJzLmdldChwYWdlKTtcclxuICAgICAgICBpZiAoIU9ic2VydmVycykge1xyXG4gICAgICAgICAgICBPYnNlcnZlcnMgPSBuZXcgQXJyYXk8KHBhZ2U6IFNoaXlpUGFnZUJhc2UpID0+IHZvaWQ+KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIE9ic2VydmVycy5wdXNoKG5vdGlmaWNhdGlvbik7XHJcbiAgICAgICAgUm91dGVyLlJlZ2lzdGVyZWREYXRhT2JzZXJ2ZXJzLnNldChwYWdlLCBPYnNlcnZlcnMpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgTmF2aWdhdGVQYXJhbTogYW55XHJcbiAgICBwdWJsaWMgc3RhdGljIE5hdmlnYXRlVG8obmFtZTogUGFnZU5hbWUsIHBhcmFtPzogYW55KTogdm9pZCB7XHJcbiAgICAgICAgUm91dGVyLk5hdmlnYXRlUGFyYW0gPSBwYXJhbSA/IHBhcmFtIDogdW5kZWZpbmVkO1xyXG4gICAgICAgIHd4Lm5hdmlnYXRlVG8oe1xyXG4gICAgICAgICAgICB1cmw6IFJvdXRlci5HZXRQYWdlUGF0aChuYW1lKVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgTmF2aWdhdGVCYWNrKCkge1xyXG4gICAgICAgIHd4Lm5hdmlnYXRlQmFjaygpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQ3VycmVudFBhZ2U6IFNoaXlpUGFnZUJhc2U7XHJcbiAgICBwdWJsaWMgZ2V0IEN1cnJlbnRQYWdlKCk6IFNoaXlpUGFnZUJhc2Uge1xyXG4gICAgICAgIHJldHVybiBSb3V0ZXIuUGFnZVN0YWNrc1tSb3V0ZXIuUGFnZVN0YWNrcy5sZW5ndGggLSAxXTtcclxuICAgIH1cclxufVxyXG4iXX0=